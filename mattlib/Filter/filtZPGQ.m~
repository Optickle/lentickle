% return a filter struct, given Virgo style specification
% of frequency and Q, with Q < 0.5 implying real values
%
% mf = filtZPGQ(zfq, pfq, g, gf)
%  or
% mf = filtZPGQ(zf, zq, pf, pq, g, gf)

function mf = filtZPGQ(varargin)

  % parse arguments
  if nargin == 4
    % arguments
    zfq = varargin{1};
    pfq = varargin{2};
    g = varargin{3};
    gf = varargin{4};
    
    % zeros and poles
    zf = zfq(:, 1);
    zq = zfq(:, 2);
    pf = pfq(:, 1);
    pq = pfq(:, 2);
  elseif nargin == 6
    % zeros and poles
    zf = varargin{1};
    zq = varargin{2};
    pf = varargin{3};
    pq = varargin{4};
    g  = varargin{5};
    gf = varargin{6};
  else
    error('Number of arguments must be 4 or 6')
  end
  
  % create filter
  mf = filtZPG(getComplex(zf, zq), getComplex(pf, pq), g, gf);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function zz = getComplex(f, q)

  nReal = find(q < 0.5);
  nComp = find(q >= 0.5);
  zz = [f(nReal); filtRes(f(nComp), q(nComp))];
